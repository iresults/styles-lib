@use "sass:map";
@use "sass:list";
@use "../config" as *;

////
/// Responsive helpers
/// @group media query

/// Returns the next screen breakpoint after the $screen-size
///
/// @link https://github.com/twbs/bootstrap/blob/958b610cfa0cfb888c14f48fb0dc8eafc8a99014/scss/mixins/_breakpoints.scss#L4
/// @param {String} $screen-size
/// @return {String}
@function next($screen-size) {
    $breakpoint-names: map.keys($internal-screen-breakpoints);
    $n: list.index($breakpoint-names, $screen-size);

    @if not $n {
        @error "Screen breakpoint `#{$screen-size}` not found in grid-breakpoints";
    }

    @return if(
        $n < length($breakpoint-names),
        list.nth($breakpoint-names, $n + 1),
        null
    );
}

// Private version of the function to allow to call it from within this module
@function -internal-min($screen-size) {
    @if map.has-key($internal-screen-breakpoints, $screen-size) {
        @return map.get($internal-screen-breakpoints, $screen-size);
    }

    @if $screen-size == "xxs" {
        @return 0;
    } @else {
        @error "Could not detect minimum width for screen size #{$screen-size}";
    }
}

/// Returns the min screen width for the given screen size
///
/// @param {String} $screen-size
/// @return {Length} Returns the lower bound for the given screen
@function min($screen-size) {
    @return -internal-min($screen-size);
}

/// Returns the max screen width for the given screen size
///
/// @param {String} $screen-size
/// @return {Length} Returns the upper bound for the given screen
@function max($screen-size) {
    $next-screen-size: next($screen-size);

    @if $next-screen-size {
        @return -internal-min($next-screen-size) - 0.02;
    }

    $last-registered-screen: list.nth(
        map.keys($internal-screen-breakpoints),
        -1
    );

    @if $screen-size == $last-registered-screen {
        @return 1000000px;
    }

    @if $screen-size == "xxs" {
        @if map.has-key($internal-screen-breakpoints, "xs") > 0 {
            @return map.get($internal-screen-breakpoints, "xs") - 0.02;
        } @else {
            @return 0;
        }
    }

    @error "Could not detect maximum width for screen size #{$screen-size}";
}
